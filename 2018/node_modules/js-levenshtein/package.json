{
  "_from": "js-levenshtein",
  "_id": "js-levenshtein@1.1.4",
  "_inBundle": false,
  "_integrity": "sha512-PxfGzSs0ztShKrUYPIn5r0MtyAhYcCwmndozzpz8YObbPnD1jFxzlBGbRnX2mIu6Z13xN6+PTu05TQFnZFlzow==",
  "_location": "/js-levenshtein",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "js-levenshtein",
    "fetchSpec": "latest",
    "name": "js-levenshtein",
    "raw": "js-levenshtein",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/js-levenshtein/-/js-levenshtein-1.1.4.tgz",
  "_shasum": "3a56e3cbf589ca0081eb22cd9ba0b1290a16d26e",
  "_spec": "js-levenshtein",
  "_where": "/Users/basilu/Documents/adventofcode/2018",
  "author": {
    "email": "gustaf@me.com",
    "name": "Gustaf Andersson"
  },
  "bugs": {
    "url": "https://github.com/gustf/js-levenshtein/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "The most efficient JS implementation calculating the Levenshtein distance, i.e. the difference between two strings.",
  "devDependencies": {
    "ava": "^0.25.0",
    "fast-levenshtein": "^2.0.6",
    "leven": "^2.1.0",
    "levenshtein-edit-distance": "^2.0.3",
    "matcha": "^0.7.0",
    "talisman": "^0.21.0",
    "xo": "^0.23.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/gustf/js-levenshtein#readme",
  "keywords": [
    "algo",
    "algorithm",
    "compare",
    "comparison",
    "diff",
    "difference",
    "distance",
    "edit",
    "fast",
    "fuzzy",
    "levenshtein",
    "match",
    "matching",
    "similar",
    "similarity",
    "string",
    "text"
  ],
  "license": "MIT",
  "name": "js-levenshtein",
  "optionalDependencies": {},
  "readme": "# js-levenshtein [![Build Status](https://travis-ci.org/gustf/js-levenshtein.svg?branch=master)](https://travis-ci.org/gustf/js-levenshtein)\n\nA very efficient JS implementation calculating the Levenshtein distance, i.e. the difference between two strings.\n\nBased on Wagner-Fischer dynamic programming algorithm, optimized for speed and memory\n - use a single distance vector instead of a matrix\n - loop unrolling on the outer loop\n - remove common prefixes/postfixes from the calculation\n - minimize the number of comparisons\n \n## Install\n\n```\n$ npm install --save js-levenshtein\n```\n\n\n## Usage\n\n```js\nconst levenshtein = require('js-levenshtein');\n\nlevenshtein('kitten', 'sitting');\n//=> 3\n```\n\n\n## Benchmark\n\n```\n$ npm run bench\n  \n                      50 paragraphs, length max=500 min=240 avr=372.5\n             152 op/s » js-levenshtein\n              97 op/s » talisman\n              93 op/s » levenshtein-edit-distance\n              83 op/s » leven\n              38 op/s » fast-levenshtein\n\n                      100 sentences, length max=170 min=6 avr=57.5\n           2,858 op/s » js-levenshtein\n           1,916 op/s » talisman\n           1,759 op/s » levenshtein-edit-distance\n           1,578 op/s » leven\n             784 op/s » fast-levenshtein\n\n                      2000 words, length max=20 min=3 avr=9.5\n           2,776 op/s » js-levenshtein\n           2,359 op/s » talisman\n           2,184 op/s » levenshtein-edit-distance\n           1,878 op/s » leven\n           1,268 op/s » fast-levenshtein\n```\n\nBenchmarks was performed with node v8.12.0 on a MacBook Pro 15\", 2.9 GHz Intel Core i9\n\n## License\n\nMIT © Gustaf Andersson",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gustf/js-levenshtein.git"
  },
  "scripts": {
    "bench": "matcha bench.js",
    "test": "ava"
  },
  "version": "1.1.4"
}
